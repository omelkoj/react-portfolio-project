{"ast":null,"code":"var _jsxFileName = \"/Users/julia/Documents/FrontEndDevelopementBootcamp/react-portfolio-project/src/PlacesToGo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport App from \"./App\";\nimport hideComponent from \"./App\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlacesToGo() {\n  _s();\n\n  //restructered code so we have a list of todos, list out each one as a p tag, using array in state\n  const [todos, setTodos] = useState([]); //preparing state to keep track of user input in user field\n\n  const [input, setInput] = useState(\"\");\n\n  const addTodo = e => {\n    e.preventDefault();\n    setTodos([...todos, input]);\n    setInput(\"\");\n  }; //reset button\n\n\n  const handleReset = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n    this.setState({\n      itemvalues: [{}]\n    });\n  }; //show and hide\n  //  const ShowAndHide = () => {\n\n\n  const [iseBlueBoxShown, setIsBlueBoxShown] = useState(false); // This function is triggered when the button is clicked\n\n  const buttonHandler = () => {\n    setIsBlueBoxShown(!iseBlueBoxShown);\n  }; //function to combine functions for adding to button\n\n\n  const handleClick = e => {\n    buttonHandler();\n    addTodo(e);\n  }; //<MenuItem onClick={handleClick}>Add Album</MenuItem>\n\n  /* // This function is triggered when the checkbox changes\n  const checkboxHandler = () => {\n    setIsYellowBoxShown(!isYellowBoxShown);\n  };*/\n\n  /*    return (\n      <div className=\"container\">\n        <div>\n          <button onClick={buttonHandler}>\n            {iseBlueBoxShown ? \"Hide Blue Box\" : \"Show Blue Box\"}\n          </button>\n          {iseBlueBoxShown && <div className=\"blue-box\"></div>}\n        </div>\n      </div>\n    );\n  */\n  //  };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: this.state.visible ? \"fadeIn\" : \"fadeOut\",\n          type: \"submit\",\n          onClick: handleClick,\n          children: [\"Add Place to GOOO\", iseBlueBoxShown ? \"Hide Blue Box\" : \"Show Blue Box\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), iseBlueBoxShown && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blue-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleReset(); //ShowAndHide();\n        },\n        children: \"RESET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"List of To-DOSSSSS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlacesToGo, \"KKJcyWQU8tgyZPzgYxlXdrVTwYo=\");\n\n_c = PlacesToGo;\nexport default PlacesToGo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesToGo\");","map":{"version":3,"sources":["/Users/julia/Documents/FrontEndDevelopementBootcamp/react-portfolio-project/src/PlacesToGo.js"],"names":["React","useState","App","hideComponent","PlacesToGo","todos","setTodos","input","setInput","addTodo","e","preventDefault","handleReset","Array","from","document","querySelectorAll","forEach","value","setState","itemvalues","iseBlueBoxShown","setIsBlueBoxShown","buttonHandler","handleClick","target","state","visible","map","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,aAAP,MAA0B,OAA1B;AACA,OAAO,WAAP;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAFoB,CAGpB;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMQ,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,KAAX,CAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAJD,CALoB,CAWpB;;;AACA,QAAMI,WAAW,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAX,EAA+CC,OAA/C,CACGV,KAAD,IAAYA,KAAK,CAACW,KAAN,GAAc,EAD5B;AAGA,SAAKC,QAAL,CAAc;AACZC,MAAAA,UAAU,EAAE,CAAC,EAAD;AADA,KAAd;AAGD,GAPD,CAZoB,CAqBpB;AACA;;;AACA,QAAM,CAACC,eAAD,EAAkBC,iBAAlB,IAAuCrB,QAAQ,CAAC,KAAD,CAArD,CAvBoB,CAyBpB;;AACA,QAAMsB,aAAa,GAAG,MAAM;AAC1BD,IAAAA,iBAAiB,CAAC,CAACD,eAAF,CAAjB;AACD,GAFD,CA1BoB,CA8BpB;;;AACA,QAAMG,WAAW,GAAId,CAAD,IAAO;AACzBa,IAAAA,aAAa;AACbd,IAAAA,OAAO,CAACC,CAAD,CAAP;AACD,GAHD,CA/BoB,CAoCpB;;AAEA;AACF;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,KAAK,EAAEH,KADT;AAEE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACe,MAAF,CAASP,KAAV,CAF3B;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,gCACE;AACE,UAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWC,OAAX,GAAqB,QAArB,GAAgC,SAD7C;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEH,WAHX;AAAA,0CAMGH,eAAe,GAAG,eAAH,GAAqB,eANvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EASGA,eAAe,iBAAI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBATtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAmBE;AACE,QAAA,OAAO,EAAE,MAAM;AACbT,UAAAA,WAAW,GADE,CAEb;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,EA+BGP,KAAK,CAACuB,GAAN,CAAWC,IAAD,iBACT;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADD,CA/BH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA7FQzB,U;;KAAAA,U;AA+FT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport App from \"./App\";\nimport hideComponent from \"./App\";\nimport \"./App.css\";\n\nfunction PlacesToGo() {\n  //restructered code so we have a list of todos, list out each one as a p tag, using array in state\n  const [todos, setTodos] = useState([]);\n  //preparing state to keep track of user input in user field\n  const [input, setInput] = useState(\"\");\n  const addTodo = (e) => {\n    e.preventDefault();\n    setTodos([...todos, input]);\n    setInput(\"\");\n  };\n\n  //reset button\n  const handleReset = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      (input) => (input.value = \"\")\n    );\n    this.setState({\n      itemvalues: [{}],\n    });\n  };\n\n  //show and hide\n  //  const ShowAndHide = () => {\n  const [iseBlueBoxShown, setIsBlueBoxShown] = useState(false);\n\n  // This function is triggered when the button is clicked\n  const buttonHandler = () => {\n    setIsBlueBoxShown(!iseBlueBoxShown);\n  };\n\n  //function to combine functions for adding to button\n  const handleClick = (e) => {\n    buttonHandler();\n    addTodo(e);\n  };\n\n  //<MenuItem onClick={handleClick}>Add Album</MenuItem>\n\n  /* // This function is triggered when the checkbox changes\n  const checkboxHandler = () => {\n    setIsYellowBoxShown(!isYellowBoxShown);\n  };*/\n\n  /*    return (\n      <div className=\"container\">\n        <div>\n          <button onClick={buttonHandler}>\n            {iseBlueBoxShown ? \"Hide Blue Box\" : \"Show Blue Box\"}\n          </button>\n          {iseBlueBoxShown && <div className=\"blue-box\"></div>}\n        </div>\n      </div>\n    );\n*/\n  //  };\n\n  return (\n    <div>\n      <form>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          type=\"text\"\n        ></input>\n\n        <div>\n          <button\n            className={this.state.visible ? \"fadeIn\" : \"fadeOut\"}\n            type=\"submit\"\n            onClick={handleClick}\n          >\n            Add Place to GOOO\n            {iseBlueBoxShown ? \"Hide Blue Box\" : \"Show Blue Box\"}\n          </button>\n          {iseBlueBoxShown && <div className=\"blue-box\"></div>}\n        </div>\n\n        <button\n          onClick={() => {\n            handleReset();\n            //ShowAndHide();\n          }}\n        >\n          RESET\n        </button>\n      </form>\n\n      <h3>List of To-DOSSSSS</h3>\n      {todos.map((todo) => (\n        <p>{todo}</p>\n      ))}\n    </div>\n  );\n}\n\nexport default PlacesToGo;\n"]},"metadata":{},"sourceType":"module"}